"""
Django settings for myproject project.

Generated by 'django-admin startproject' using Django 4.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

import os
from pathlib import Path
import sys

# Build paths inside the project like this: BASE_DIR / 'subdir'.
# BASE_DIR = os.path.dirname(os.path.abspath(__file__))
# BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
BASE_DIR = Path(__file__).resolve(strict=True).parent.parent
print(BASE_DIR)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-82qibhz^s@_di4f=405%)ndjhj5h_j-+amkut0$+@c42z9ylx3"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "rest_framework",
    'drf_yasg',
    "corsheaders",
    "deleteFile",
    "deleteNote",
    "deleteTheme",
    "forgetPassword",
    "breeze",
    "getInfo",
    "getNote",
    "getTheme",
    "logout",
    "loadNoteTree",
    "newMediaFile",
    "newNote",
    "newTheme",
    "registerAndLogin",
    "saveNote",
    "updateInfo",
    "updateMediaFile",
    "viewMediaFile",
    "newCollaborate",
    "deleteCollaborate",
    "joinCollaborate",
    "channels",
    'notes',
    "jwtauth",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "corsheaders.middleware.CorsMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]


REST_FRAMEWORK = {
    "DEFAULT_PERMISSION_CLASSES":
        ["rest_framework.permissions.IsAuthenticated"], # 修改权限为认证过才能访问 
    'DEFAULT_PARSER_CLASSES':[
        'rest_framework.parsers.JSONParser',
        'rest_framework.parsers.FormParser',
        'rest_framework.parsers.MultiPartParser'
    ],
    "DEFAULT_AUTHENTICATION_CLASSES":  #驗證
    [                               
        "rest_framework.authentication.SessionAuthentication",        # Session驗證
        "rest_framework_simplejwt.authentication.JWTAuthentication",  # JWT驗證
    ],
    "DEFAULT_SCHEMA_CLASS": "rest_framework.schemas.coreapi.AutoSchema", # swagger
}

SWAGGER_SETTINGS = {
  'DEFAULT_MODEL_RENDERING': 'example',
  'SHOW_COMMON_EXTENSIONS': False,
  'DISPLAY_OPERATION_ID': False,
  'USE_SESSION_AUTH': True,
}

from datetime import timedelta

# JWT的access token(1天)與refresh token(預設為24小時)長度
SIMPLE_JWT = {
  'ACCESS_TOKEN_LIFETIME': timedelta(days = 1),
  'REFRESH_TOKEN_LIFETIME': timedelta(days = 1),
  'SIGNING_KEY': SECRET_KEY,
  'AUTH_HEADER_TYPES': ('Bearer',),
}

CORS_ORIGIN_ALLOW_ALL = True


ROOT_URLCONF = "myproject.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [os.path.join(BASE_DIR, "templates").replace("\\", "/")],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "myproject.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'simplenote2db',
        'USER': 'root',
        'PASSWORD': 'root',
        'HOST': 'host.docker.internal',  # Access host machine's MySQL from Docker
        'PORT': '3306',
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"


# STATICFILES_DIRS = [
#     os.path.join(BASE_DIR, "static"),
# ]

CORS_ALLOW_CREDENTIALS = True

CSRF_COOKIE_SECURE = True

CSRF_COOKIE_HTTPONLY = True

SESSION_COOKIE_SECURE = True

CSRF_TRUSTED_ORIGINS = ["http://localhost:3000"]

CORS_ORIGIN_WHITELIST = ["http://localhost:3000"]

TIME_ZONE = "Asia/Taipei"

# SMTP Configuration
EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_HOST = "smtp.gmail.com"  # SMTP伺服器
EMAIL_PORT = 587  # TLS通訊埠號
EMAIL_USE_TLS = True  # 開啟TLS(傳輸層安全性)
EMAIL_HOST_USER = "s2mplenote.nknu@gmail.com"  # 寄件者電子郵件
from . import password
EMAIL_HOST_PASSWORD = password.EMAIL_HOST_PASSWORD  # Gmail應用程式的密碼

# socket setting
ASGI_APPLICATION = "myproject.asgi.application"